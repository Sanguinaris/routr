apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-routr-requester
  labels:
    {{- include ".helm.labels" . | nindent 4 }}
    service: requester
spec:
  selector:
    matchLabels:
      {{- include ".helm.selectorLabels" . | nindent 6 }}
      service: requester
  template:
    metadata:
      annotations:
      {{- with .Values.requester.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/requester/configmaps.yaml") . | sha256sum }}      
      labels:
        {{- include ".helm.selectorLabels" . | nindent 8 }}
        service: requester
    spec:
      securityContext:
        runAsUser: {{ .Values.requester.securityContext.runAsUser }}
        runAsGroup: {{ .Values.requester.securityContext.runAsGroup }}
        fsGroup: {{ .Values.requester.securityContext.fsGroup }}
      containers:
        - name: requester
          image: "{{ .Values.requester.image.repository }}:{{ .Values.requester.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.requester.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: {{ .Values.requester.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.requester.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.requester.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.requester.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.requester.livenessProbe.timeoutSeconds }}
          env:
            - name: LOGS_LEVEL
              value: {{ .Values.global.logsLevel }}
            - name: OTEL_EXPORTER_JAEGER_ENDPOINT
              value: {{ .Values.global.otlExporter }}
            - name: ENABLE_HEALTHCHECKS
              value: "true"
          ports:
            - containerPort: 8080
            - containerPort: 51909
          volumeMounts:
            - name: config
              mountPath: /etc/routr/log4j2.yaml
              subPath: log4j2.yaml
          resources:
            {{- if .Values.requester.resources.limits }}
            limits:
            {{- .Values.requester.resources.limits | toYaml | nindent 14 }}
            {{- end }}
            {{- if .Values.requester.resources.requests }}
            requests:
            {{- .Values.requester.resources.requests | toYaml | nindent 14 }}
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.requester.securityContext.allowPrivilegeEscalation }}         
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-routr-requester-config
